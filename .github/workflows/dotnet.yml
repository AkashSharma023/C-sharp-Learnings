name: Build and Run .NET Projects

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Detect changed folders
        id: changed
        run: |
          echo "##[group]Finding folders with changed .cs files"
          CHANGED=$(git diff --name-only HEAD^ HEAD | grep '\.cs' | awk -F/ '{print $1"/"$2}' | sort -u)
          echo "Changed folders: $CHANGED"
          echo "folders=$CHANGED" >> $GITHUB_OUTPUT
          echo "##[endgroup]"

      - name: Build and run changed projects
        if: steps.changed.outputs.folders != ''
        env:
          CHANGED_FOLDERS: ${{ steps.changed.outputs.folders }}
        run: |
          echo "CHANGED_FOLDERS: $CHANGED_FOLDERS"
          IFS=$'\n'
          for folder in $CHANGED_FOLDERS; do
            echo "Checking $folder for .csproj files"
            for proj in $(find "$folder" -maxdepth 1 -name '*.csproj'); do
              echo "Building $proj"
              dotnet build "$proj"
              OUTPUT_TYPE=$(grep -oPm1 "(?<=<OutputType>)[^<]+" "$proj")
              if [ -z "$OUTPUT_TYPE" ]; then
                OUTPUT_TYPE="Library"
              fi
              echo "OutputType: $OUTPUT_TYPE"
              HAS_MAIN=$(grep -l 'static void Main' "$folder"/*.cs || true)
              if [ "$OUTPUT_TYPE" = "Exe" ] && [ -n "$HAS_MAIN" ]; then
                echo "Running $proj"
                dotnet run --project "$proj"
              else
                echo "Skipping run for library project or no Main: $proj"
              fi
            done
          done
